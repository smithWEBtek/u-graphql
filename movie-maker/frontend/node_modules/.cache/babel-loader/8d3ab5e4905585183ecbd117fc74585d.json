{"ast":null,"code":"var _jsxFileName = \"/Users/brad/dev/u-graphql/movie-maker/src/containers/Movies.js\";\nimport React, { Component } from 'react';\nimport Movie from './Movie';\nimport MoviesData from './Movies.data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Movies extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      movies: MoviesData\n    };\n  }\n\n  render() {\n    const renderedMovies = this.state.movies.map((movie, index) => {\n      debugger;\n      return /*#__PURE__*/_jsxDEV(Movie, {\n        name: movie.name,\n        imageUrl: movie.imageUrl\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies\",\n      children: renderedMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/brad/dev/u-graphql/movie-maker/src/containers/Movies.js"],"names":["React","Component","Movie","MoviesData","Movies","state","movies","render","renderedMovies","map","movie","index","name","imageUrl","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;;AAEA,eAAe,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC5CI,KAD4C,GACpC;AACNC,MAAAA,MAAM,EAAEH;AADF,KADoC;AAAA;;AAK5CI,EAAAA,MAAM,GAAG;AAEP,UAAMC,cAAc,GAAG,KAAKH,KAAL,CAAWC,MAAX,CAAkBG,GAAlB,CAAsB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC7D;AACA,0BACE,QAAC,KAAD;AAAsB,QAAA,IAAI,EAAED,KAAK,CAACE,IAAlC;AAAwC,QAAA,QAAQ,EAAEF,KAAK,CAACG;AAAxD,SAAYH,KAAK,CAACI,EAAlB;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,KALsB,CAAvB;AAOA,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBACGN;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAnB2C","sourcesContent":["import React, { Component } from 'react';\nimport Movie from './Movie';\nimport MoviesData from './Movies.data';\n\nexport default class Movies extends Component {\n  state = {\n    movies: MoviesData\n  }\n\n  render() {\n\n    const renderedMovies = this.state.movies.map((movie, index) => {\n      debugger;\n      return (\n        <Movie key={movie.id} name={movie.name} imageUrl={movie.imageUrl} />\n      )\n    })\n\n    return (\n      <div className=\"movies\">\n        {renderedMovies}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}